[{"/Users/browsing/GitHub/indent-system/indent-system/src/index.js":"1","/Users/browsing/GitHub/indent-system/indent-system/src/reportWebVitals.js":"2"},{"size":11411,"mtime":1608203509751,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1608177340500,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9kz5co",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/browsing/GitHub/indent-system/indent-system/src/index.js",["11","12","13","14","15","16"],"/Users/browsing/GitHub/indent-system/indent-system/src/reportWebVitals.js",[],["17","18"],{"ruleId":"19","severity":1,"message":"20","line":99,"column":10,"nodeType":"21","messageId":"22","endLine":99,"endColumn":14},{"ruleId":"23","severity":1,"message":"24","line":102,"column":18,"nodeType":"25","endLine":102,"endColumn":41},{"ruleId":"26","severity":1,"message":"27","line":213,"column":34,"nodeType":"28","messageId":"29","endLine":217,"endColumn":6},{"ruleId":"19","severity":1,"message":"30","line":227,"column":23,"nodeType":"21","messageId":"22","endLine":227,"endColumn":30},{"ruleId":"19","severity":1,"message":"31","line":227,"column":32,"nodeType":"21","messageId":"22","endLine":227,"endColumn":43},{"ruleId":"23","severity":1,"message":"24","line":263,"column":18,"nodeType":"25","endLine":263,"endColumn":43},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'callbackID' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'myStates', 'myStates', 'myStates', 'myStates'.","ArrowFunctionExpression","unsafeRefs","'setText' is assigned a value but never used.","'initialData' is assigned a value but never used.","no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-global-assign","no-unsafe-negation"]