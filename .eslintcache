[{"/Users/browsing/GitHub/indent-system/indent-system/src/index.js":"1","/Users/browsing/GitHub/indent-system/indent-system/src/reportWebVitals.js":"2"},{"size":11113,"mtime":1608194400666,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1608177340500,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9kz5co",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/browsing/GitHub/indent-system/indent-system/src/index.js",["11","12","13","14","15","16","17"],"/Users/browsing/GitHub/indent-system/indent-system/src/reportWebVitals.js",[],["18","19"],{"ruleId":"20","severity":1,"message":"21","line":81,"column":10,"nodeType":"22","messageId":"23","endLine":81,"endColumn":14},{"ruleId":"24","severity":1,"message":"25","line":84,"column":18,"nodeType":"26","endLine":84,"endColumn":41},{"ruleId":"20","severity":1,"message":"27","line":174,"column":7,"nodeType":"22","messageId":"23","endLine":174,"endColumn":20},{"ruleId":"28","severity":1,"message":"29","line":194,"column":34,"nodeType":"30","messageId":"31","endLine":198,"endColumn":6},{"ruleId":"20","severity":1,"message":"32","line":208,"column":23,"nodeType":"22","messageId":"23","endLine":208,"endColumn":30},{"ruleId":"20","severity":1,"message":"33","line":208,"column":32,"nodeType":"22","messageId":"23","endLine":208,"endColumn":43},{"ruleId":"24","severity":1,"message":"25","line":244,"column":18,"nodeType":"26","endLine":244,"endColumn":43},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'callbackID' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","CallExpression","'loadDataStore' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'myStates', 'myStates', 'myStates', 'myStates'.","ArrowFunctionExpression","unsafeRefs","'setText' is assigned a value but never used.","'initialData' is assigned a value but never used.","no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-global-assign","no-unsafe-negation"]