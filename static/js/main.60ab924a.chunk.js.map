{"version":3,"sources":["index.js"],"names":["setTabs","socket","serverURL","additionalTabs","tabID","App","React","tabs","mySetTabs","socketIOClient","on","indents","writeToken","undefined","ackWriteToken","pendingWrites","dataStore","notifyNewData","notifications","notificationsStore","notifyNewN","emit","disconnect","Tabs","label","mykey","TransportView","NewIndentView","NotificationsPanel","DevPanel","map","v","DetailGenerator","readDataStore","name","removable","removeCallback","id","filter","x","detailPersistentStore","details","myServerURL","setServerURL","response","setResponse","myListener","data","off","value","onChange","event","target","myData","readNotifications","setData","callbackID","registerNotify","deregisterNotify","newData","encountered","i","length","internalUID","unshift","latest","ListFactory","generator","index","notificationItemGenerator","style","TransportViewStyle","header","formFields","friendlyName","detailItemGenerator","variant","native","status","statuses","val","onClick","editData","a","writeDataStore","result","currWriteToken","write","myPromise","Promise","resolve","appendDataStore","readRange","submitForm","FormFactory","fields","defaults","fieldStates","initialData","states","setStates","myStates","field","push","noValidate","text","setText","formItemStyle","multiline","constitutedObject","display","justifyContent","padding","dataDefaults","registerCallback","deregisterCallback","displayFields","transportItemGenerator","font","addDetailTab","startDateTime","endDateTime","origin","destination","POC","POCPhone","key","notificationItemStyle","align","title","color","tab","tail","getCallbackSystem","dataSource","registeredCallbacks","callback","children","selTab","setSelTab","position","Math","min","child","obj","props","active","Tab","size","ReactDOM","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.60ab924a.chunk.js","sourcesContent":["import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport socketIOClient from \"socket.io-client\";\n\nimport * as Material from \"@material-ui/core\"\nimport * as Icons from \"@material-ui/icons\"\n\nvar serverURL = \"http://murmuring-ocean-38436.herokuapp.com:80/\"\n\nvar setTabs\nvar additionalTabs = []\nvar tabID = 0\nconst addTab = (tab) => {\n  additionalTabs = [...additionalTabs]\n  additionalTabs.push(tab)\n  setTabs(additionalTabs)\n}\nconst removeTab = (id) => {\n  additionalTabs = [...additionalTabs].filter(x => x[0] !== id)\n  detailPersistentStore[id] = undefined\n  setTabs(additionalTabs)\n}\n\nvar socket\n\nconst App = () => {\n  \n  var [tabs, mySetTabs] = React.useState([])\n  setTabs = mySetTabs\n  React.useEffect(() => {\n    socket = socketIOClient(serverURL);\n    socket.on(\"sendIndents\", (indents, writeToken) => {\n      if (writeToken !== undefined) {\n        if (writeToken < ackWriteToken) {\n          return\n        }\n        ackWriteToken = writeToken\n        if (pendingWrites[writeToken] !== undefined) {\n          pendingWrites[writeToken]()\n        }\n      }\n      dataStore = [...indents]\n      notifyNewData()\n    })\n    socket.on(\"sendNotifications\", (notifications) => {\n      notificationsStore = [...notifications]\n      notifyNewN()\n    })\n    socket.emit(\"requestIndents\", \"\")\n    socket.emit(\"requestNotifications\", \"\")\n    return () => {\n      socket.disconnect()\n    }\n  }, [])\n\n  return (\n    <Tabs>\n      {[(<div label=\"view indents\" key=\"defaultTab1\" mykey=\"defaultTab1\">\n        <TransportView/>\n      </div>),\n      (<div label=\"new indent\" key=\"defaultTab2\" mykey=\"defaultTab2\">\n        <NewIndentView/>\n      </div>),\n      (<div label=\"notifications\" key=\"defaultTab3\" mykey=\"defaultTab3\">\n        <NotificationsPanel/>\n      </div>),\n      (<div label=\"dev\" key=\"defaultTab4\" mykey=\"defaultTab4\">\n        <DevPanel/>\n      </div>), ...tabs.map(v => (<DetailGenerator mykey={v[0]} label={readDataStore(v[1]).name} removable=\"true\" removeCallback={() => removeTab(v[0])} details={v} key={v[0]} />))]}\n    </Tabs>\n  );\n}\n\nconst DevPanel = () => {\n  const [myServerURL, setServerURL] = React.useState(serverURL)\n  const [response, setResponse] = React.useState(\"\");\n  const myListener = data => {\n    setResponse(data)\n  }\n\n  React.useEffect(() => {\n    socket.on(\"FromAPI\", myListener);\n    socket.emit(\"ToAPI\", \"Hello!\")\n    return () => {\n      socket.emit(\"ToAPI\", \"Goodbye!\")\n      socket.off(\"FromAPI\", myListener)\n    }\n  }, []);\n\n  return (<div>\n    <div>Server URL</div><textarea value={myServerURL} onChange={(event) => {\n      serverURL = event.target.value\n      setServerURL(serverURL)\n    }}/>\n    <div>It's {response}</div>\n  </div>)\n}\n\nconst NotificationsPanel = () => {\n  var myData = readNotifications()\n  const [data, setData] = React.useState(myData)\n  React.useEffect(() => {\n    const callbackID = registerNotify(setData)\n    return () => deregisterNotify(callbackID)\n  }, [])\n  var newData = []\n  const encountered = {}\n  for (var i = myData.length-1; i > -1; i--) {\n    if (encountered[myData[i].internalUID] === true) {\n      newData.unshift({...myData[i], latest: false})\n    }\n    else {\n      newData.unshift({...myData[i], latest: true})\n    }\n    encountered[myData[i].internalUID] = true\n  }\n  return (<ListFactory data={newData} generator={(x, index) => notificationItemGenerator(x, x.internalUID, \"\"+x.internalUID+index)} style={TransportViewStyle}/>)\n}\n\nconst detailPersistentStore = {}\n\nconst DetailGenerator = ({details}) => {\n  const [id, index] = details\n  if (detailPersistentStore[id] === undefined) {\n    detailPersistentStore[id] = readDataStore(index)\n  }\n  const [data, setData] = React.useState(detailPersistentStore[id])\n  return (\n  <div>\n  <ListFactory header={(<Material.TableHead><Material.TableRow>{formFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={[data]} generator={x => detailItemGenerator(x, x.internalUID)} style={TransportViewStyle}/>\n  <Material.Select variant=\"outlined\" native value={data.status} onChange={(event) => {\n    detailPersistentStore[id] = {...detailPersistentStore[id], status: event.target.value}\n    setData(detailPersistentStore[id])\n  }}>\n  {statuses.map((val, index) => (<option key={index} value={val}>{val}</option>))}\n  </Material.Select>\n  <Material.Button variant=\"outlined\" onClick={() => {editData(index, detailPersistentStore[id])}}>Save</Material.Button>\n  </div>\n  )\n}\n\nconst editData = async (index, newData) => {\n  const refresh = await writeDataStore(index, newData)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst readDataStore = (internalUID) => {\n  const result = dataStore.filter(x => x.internalUID === internalUID)\n  if (result.length === 0) {\n    return undefined\n  }\n  else {\n    return result[0]\n  }\n}\n\nvar ackWriteToken = 0\nvar currWriteToken = 0\nvar pendingWrites = []\n\n\nconst writeDataStore = async (internalUID, write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"writeDataStore\", [internalUID, write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst appendDataStore = async (write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"appendDataStore\", [write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst readRange = () => {\n  return dataStore\n}\n\nconst submitForm = async (data) => {\n  const refresh = await appendDataStore(data)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst FormFactory = ({fields, defaults}) => {\n  var fieldStates = []\n  const [states, setStates] = React.useState(fields.map(x => x.initialData))\n  var myStates = states\n  for (var index = 0; index < fields.length; index++) {\n    const i = index\n    const field = fields[i]\n    fieldStates.push([states[i], x => {\n      myStates = [...myStates]\n      myStates[i] = x\n      setStates(myStates)\n    },field.initialData, field.name, field.friendlyName])\n  }\n  const initializeFields = () => {\n    setStates(fields.map(x => x.initialData))\n  }\n  const submit = () => {\n    var constitutedObject = {}\n    for (const {name, initialData} of defaults) {\n      constitutedObject[name] = initialData\n    }\n    for (const [text, setText, initialData, fieldName] of fieldStates) {\n      constitutedObject[fieldName] = text\n    }\n    submitForm(constitutedObject)\n    initializeFields()\n  }\n  return (\n  <form noValidate>\n  <div>\n  {fieldStates.map(([text, setText, initialData, fieldName, friendlyName], index) => {\n    return (\n      <div style={formItemStyle} key={index}>\n      <Material.TextField multiline label={friendlyName} variant=\"outlined\" value={text} onChange={(event) => setText(event.target.value)}/>\n      </div>\n    )\n  })}\n  </div>\n  <Material.Button variant=\"outlined\" onClick={submit}>submit</Material.Button>\n  </form>\n  )\n}\n\nconst formItemStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"5px\"\n}\n\nconst NewIndentView = () => {\n  return (<div style={TransportViewStyle}><FormFactory fields={formFields} defaults={dataDefaults}/></div>)\n}\n\nconst TransportView = () => {\n  const [data, setData] = React.useState(readRange())\n  React.useEffect(() => {\n    const callbackID = registerCallback(setData)\n    return () => deregisterCallback(callbackID)\n  }, [])\n  return (<ListFactory header={(<Material.TableHead><Material.TableRow>{displayFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={data} generator={x => transportItemGenerator(x, x.internalUID)} style={TransportViewStyle}/>)\n}\n\nconst TransportViewStyle = {\n  font: \"20px Arial, sans-serif\"\n}\n\nconst transportItemGenerator = (data, index) => {\n  return (\n    <Material.TableRow key={data.internalUID} onClick={() => addDetailTab(data, index)}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n      <Material.TableCell>{data.status}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst detailItemGenerator = (data, index) => {\n  return (\n    <Material.TableRow key={data.internalUID}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst notificationItemGenerator = (data, index, key) => {\n  return (\n    <Material.TableRow key={key} onClick={() => addDetailTab(data, index)}><Material.TableCell style={notificationItemStyle(data.latest)} align=\"center\">{data.title}</Material.TableCell></Material.TableRow>\n  )\n}\n\nconst notificationItemStyle = (latest) => {\n  if (latest === false) {\n    return {\n      color: \"grey\"\n    }\n  }\n  else {\n    return {}\n  }\n}\n\nconst addDetailTab = (data, index) => {\n  addTab([tabID, index])\n  tabID++\n}\n\nconst ListFactory = ({data, generator, style, header, tail}) => {\n  return (\n    <Material.TableContainer>\n      <Material.Table>\n        {header}\n        <Material.TableBody>\n          {data.map(generator)}\n        </Material.TableBody>\n        {tail}\n      </Material.Table>\n    </Material.TableContainer>\n  )\n}\n\nconst getCallbackSystem = (dataSource) => {\n\n  const registeredCallbacks = []\n\n  const registerCallback = (callback) => {\n    return registeredCallbacks.push(callback)-1\n  }\n\n  const deregisterCallback = (id) => {\n    if (id > -1 && id < registeredCallbacks.length) {\n      registeredCallbacks[id] = ()=>{}\n    }\n  }\n  \n  const notifyNewData = () => {\n    for (const callback of registeredCallbacks) {\n      callback(dataSource())\n    }\n  }\n\n  return [registerCallback, deregisterCallback, notifyNewData]\n}\n\nvar dataStore = []\n\nconst readNotifications = () => {\n  return notificationsStore\n}\n\nvar notificationsStore = []\n\nconst statuses = [\"Pending\", \"Submitted\", \"Recommended\"]\n\nconst formFields = [{name: \"name\", initialData: \"\", friendlyName: \"Indent title\"}, {name: \"startDateTime\", initialData: \"\", friendlyName: \"Start time\"}, {name: \"endDateTime\", initialData: \"\", friendlyName: \"End time\"}, {name: \"origin\", initialData: \"\", friendlyName: \"Origin\"}, {name: \"destination\", initialData: \"\", friendlyName: \"Destination\"}, {name: \"POC\", initialData: \"\", friendlyName: \"Contact person\"}, {name: \"POCPhone\", initialData: \"\", friendlyName: \"Contact person number\"}]\n\nconst dataDefaults = [{name: \"status\", initialData: \"Pending\", friendlyName: \"Status\"}]\n\nconst displayFields = [...formFields, ...dataDefaults]\n\nconst Tabs = ({children}) => {\n  const [selTab, setSelTab] = React.useState(0);\n  return (\n    <div>\n      <Material.AppBar position=\"static\">\n        <Material.Tabs variant=\"scrollable\" value={Math.min(selTab, children.length-1)}>\n          {children.map((child, index) => {\n            const obj = {...child.props, onClick: () => {setSelTab(index)}, active: index === Math.min(selTab, children.length-1), key: child.props.mykey}\n            return (<Tab {...obj}></Tab>)\n          })}\n        </Material.Tabs>\n      </Material.AppBar>\n      <div>\n        {children[Math.min(selTab, children.length-1)]}\n      </div>\n    </div>\n  )\n}\n\nconst Tab = ({label, onClick, active, removable, removeCallback}) => {\n  return (\n    <div>\n      <Material.Tab label={(<span>{\" \"+label+\" \"} {removable ? (<Material.IconButton size=\"small\" onClick={removeCallback}><Icons.Close/></Material.IconButton>) : undefined}</span>)} onClick={onClick}/>\n    </div>\n  )\n}\n\nconst TabCloseStyle = {\n  font: \"16px Arial, sans-serif\",\n  margin: \"auto\"\n}\n\nconst [registerCallback, deregisterCallback, notifyNewData] = getCallbackSystem(readRange)\n\nconst [registerNotify, deregisterNotify, notifyNewN] = getCallbackSystem(readNotifications)\n\nReactDOM.render(\n  <div style={{textAlign: \"center\"}}>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}