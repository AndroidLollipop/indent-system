{"version":3,"sources":["index.js","resources/logo.jpg","resources/5sirlogo.jpg"],"names":["setTabs","socket","serverURL","additionalTabs","tabID","App","React","tabs","mySetTabs","socketIOClient","secure","on","indents","writeToken","undefined","ackWriteToken","pendingWrites","dataStore","reverse","notifyNewData","notifications","notificationsStore","notifyNewN","emit","disconnect","selTab","setSelTab","label","mykey","map","v","i","readDataStore","name","removable","removeCallback","index","length","id","filter","x","detailPersistentStore","currSelTab","Math","min","details","style","height","src","sir5logo","width","NotificationsPanel","myData","readNotifications","setData","callbackID","registerNotify","deregisterNotify","newData","encountered","internalUID","push","latest","square","data","generator","notificationItemGenerator","TransportViewStyle","DetailGenerator","header","formFields","friendlyName","detailItemGenerator","variant","native","value","status","onChange","event","target","statuses","val","onClick","editData","a","writeDataStore","result","currWriteToken","write","myPromise","Promise","resolve","appendDataStore","readRange","submitForm","FormFactory","fields","defaults","fieldStates","initialData","states","setStates","myStates","field","fieldType","noValidate","text","setText","formItemStyle","fullWidth","type","InputLabelProps","shrink","multiline","constitutedObject","fieldName","normalizer","normalizers","slice","display","justifyContent","padding","NewIndentView","dataDefaults","TransportView","registerCallback","deregisterCallback","displayFields","transportItemGenerator","font","addDetailTab","Infinity","startDateTime","endDateTime","origin","destination","POC","POCPhone","vehicles","notes","key","notificationItemStyle","align","title","color","tab","ListFactory","tail","getCallbackSystem","dataSource","registeredCallbacks","callback","Tabs","children","pre","opacity","minWidth","minHeight","disableRipple","selected","appLogo","position","child","obj","props","active","Tab","size","fill","ReactDOM","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.aec0a3df.chunk.js","sourcesContent":["import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport socketIOClient from \"socket.io-client\";\n\nimport * as Material from \"@material-ui/core\"\nimport * as Icons from \"@material-ui/icons\"\n\nimport appLogo from \"./resources/logo.jpg\"\nimport sir5logo from \"./resources/5sirlogo.jpg\"\n\nvar serverURL = \"https://murmuring-ocean-38436.herokuapp.com/\"\n\nvar setTabs\nvar additionalTabs = []\nvar tabID = 0\nconst addTab = (tab) => {\n  additionalTabs = [...additionalTabs]\n  additionalTabs.push(tab)\n  setTabs(additionalTabs)\n}\nconst removeTab = (id) => {\n  additionalTabs = [...additionalTabs].filter(x => x[0] !== id)\n  detailPersistentStore[id] = undefined\n  setTabs(additionalTabs)\n}\n\nvar socket\n\nconst App = () => {\n  \n  var [tabs, mySetTabs] = React.useState([])\n  setTabs = mySetTabs\n  React.useEffect(() => {\n    socket = socketIOClient(serverURL, {secure: true});\n    socket.on(\"sendIndents\", (indents, writeToken) => {\n      if (writeToken !== undefined) {\n        if (writeToken < ackWriteToken) {\n          return\n        }\n        ackWriteToken = writeToken\n        if (pendingWrites[writeToken] !== undefined) {\n          pendingWrites[writeToken]()\n        }\n      }\n      dataStore = [...indents].reverse()\n      notifyNewData()\n    })\n    socket.on(\"sendNotifications\", (notifications) => {\n      notificationsStore = [...notifications].reverse()\n      notifyNewN()\n    })\n    socket.emit(\"requestIndents\", \"\")\n    socket.emit(\"requestNotifications\", \"\")\n    return () => {\n      socket.disconnect()\n    }\n  }, [])\n  const [selTab, setSelTab] = React.useState(0);\n\n  return (\n    <div>\n      <Tabs selTab={selTab} setSelTab={setSelTab}>\n        {[(<div label=\"view indents\" key=\"defaultTab1\" mykey=\"defaultTab1\">\n          <TransportView setSelTab={setSelTab}/>\n        </div>),\n        (<div label=\"new indent\" key=\"defaultTab2\" mykey=\"defaultTab2\">\n          <NewIndentView/>\n        </div>),\n        (<div label=\"notifications\" key=\"defaultTab3\" mykey=\"defaultTab3\">\n          <NotificationsPanel setSelTab={setSelTab}/>\n        </div>), ...tabs.map((v, i) => (<DetailGenerator mykey={v[0]} label={readDataStore(v[1]).name} removable=\"true\" removeCallback={(index, length) => {\n          removeTab(v[0])\n          const currSelTab = Math.min(selTab, length-1)\n          if (currSelTab > index) {\n            setSelTab(currSelTab-1)\n          }\n        }} details={v} key={v[0]} />))]}\n      </Tabs>\n      <div style={{height: \"6px\"}}/>\n      <img src={sir5logo} width=\"192px\"/>\n    </div>\n  );\n}\n\nconst DevPanel = () => {\n  const [myServerURL, setServerURL] = React.useState(serverURL)\n  const [response, setResponse] = React.useState(\"\");\n  const myListener = data => {\n    setResponse(data)\n  }\n\n  React.useEffect(() => {\n    socket.on(\"FromAPI\", myListener);\n    return () => {\n      socket.off(\"FromAPI\", myListener)\n    }\n  }, []);\n\n  return (<div>\n    <div>Server URL</div><textarea value={myServerURL} onChange={(event) => {\n      serverURL = event.target.value\n      setServerURL(serverURL)\n    }}/>\n    <div>It's {response}</div>\n  </div>)\n}\n\nconst NotificationsPanel = ({setSelTab}) => {\n  var myData = readNotifications()\n  const [data, setData] = React.useState(myData)\n  React.useEffect(() => {\n    const callbackID = registerNotify(setData)\n    return () => deregisterNotify(callbackID)\n  }, [])\n  var newData = []\n  const encountered = {}\n  for (var i = 0; i < myData.length; i++) {\n    if (encountered[myData[i].internalUID] === true) {\n      newData.push({...myData[i], latest: false})\n    }\n    else {\n      newData.push({...myData[i], latest: true})\n    }\n    encountered[myData[i].internalUID] = true\n  }\n  return (\n    <div>\n      <div style={{height: \"6px\"}}/>\n      <Material.Paper square>\n        <ListFactory data={newData} generator={(x, index) => notificationItemGenerator(x, x.internalUID, \"\"+x.internalUID+index, setSelTab)} style={TransportViewStyle}/>\n      </Material.Paper>\n    </div>\n  )\n}\n\nconst detailPersistentStore = {}\n\nconst DetailGenerator = ({details}) => {\n  const [id, index] = details\n  if (detailPersistentStore[id] === undefined) {\n    detailPersistentStore[id] = readDataStore(index)\n  }\n  const [data, setData] = React.useState(detailPersistentStore[id])\n  return (\n  <div>\n    <div style={{height:\"6px\"}}/>\n    <Material.Paper square>\n      <ListFactory header={(<Material.TableHead><Material.TableRow>{formFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={[data]} generator={x => detailItemGenerator(x, x.internalUID)} style={TransportViewStyle}/>\n    </Material.Paper>\n    <div style={{height:\"6px\"}}/>\n    <Material.Select variant=\"outlined\" native value={data.status} onChange={(event) => {\n      detailPersistentStore[id] = {...detailPersistentStore[id], status: event.target.value}\n      setData(detailPersistentStore[id])\n    }}>\n    {statuses.map((val, index) => (<option key={index} value={val}>{val}</option>))}\n    </Material.Select>\n    <Material.Button variant=\"outlined\" onClick={() => {editData(index, detailPersistentStore[id])}}>Save</Material.Button>\n  </div>\n  )\n}\n\nconst editData = async (index, newData) => {\n  const refresh = await writeDataStore(index, newData)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst readDataStore = (internalUID) => {\n  const result = dataStore.filter(x => x.internalUID === internalUID)\n  if (result.length === 0) {\n    return undefined\n  }\n  else {\n    return result[0]\n  }\n}\n\nvar ackWriteToken = 0\nvar currWriteToken = 0\nvar pendingWrites = []\n\n\nconst writeDataStore = async (internalUID, write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"writeDataStore\", [internalUID, write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst appendDataStore = async (write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"appendDataStore\", [write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst readRange = () => {\n  return dataStore\n}\n\nconst submitForm = async (data) => {\n  const refresh = await appendDataStore(data)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst FormFactory = ({fields, defaults}) => {\n  var fieldStates = []\n  const [states, setStates] = React.useState(fields.map(x => x.initialData))\n  var myStates = states\n  for (var index = 0; index < fields.length; index++) {\n    const i = index\n    const field = fields[i]\n    fieldStates.push([states[i], x => {\n      myStates = [...myStates]\n      myStates[i] = x\n      setStates(myStates)\n    },field.initialData, field.name, field.friendlyName, field.fieldType])\n  }\n  const initializeFields = () => {\n    setStates(fields.map(x => x.initialData))\n  }\n  const submit = () => {\n    var constitutedObject = {}\n    for (const {name, initialData} of defaults) {\n      constitutedObject[name] = initialData\n    }\n    for (const [text, setText, initialData, fieldName, friendlyName, fieldType] of fieldStates) {\n      const normalizer = normalizers[fieldType]\n      constitutedObject[fieldName] = normalizer ? normalizer(text) : text\n    }\n    submitForm(constitutedObject)\n    initializeFields()\n  }\n  return (\n  <form noValidate>\n  <div>\n  {fieldStates.map(([text, setText, initialData, fieldName, friendlyName, fieldType], index) => {\n    return (\n      <div style={formItemStyle} key={index}>\n      {fieldType === \"datetime\" ?\n      (<Material.TextField\n        id=\"datetime-local\"\n        fullWidth={true}\n        label={friendlyName}\n        type=\"datetime-local\"\n        variant=\"outlined\"\n        onChange={(event) => setText(event.target.value)}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />)\n      :(<Material.TextField fullWidth={true} multiline label={friendlyName} variant=\"outlined\" value={text} onChange={(event) => setText(event.target.value)} InputLabelProps={{shrink: true,}}/>)\n      }\n      </div>\n    )\n  })}\n  </div>\n  <Material.Button variant=\"outlined\" onClick={submit}>submit</Material.Button>\n  </form>\n  )\n}\n\nconst normalizers = {\n  \"datetime\": x => {\n    try {\n      if (x.length > 0) {\n        return x.slice(8, 10) + \"/\" + x.slice(5, 7) + \"/\" + x.slice(0, 4) + \" \" + x.slice(11, 16)\n      }\n    }\n    catch {\n    }\n    return x\n  }\n}\n\nconst formItemStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"5px\"\n}\n\nconst NewIndentView = () => {\n  return (<div style={TransportViewStyle}><div style={{height: \"6px\"}}/><FormFactory fields={formFields} defaults={dataDefaults}/></div>)\n}\n\nconst TransportView = ({setSelTab}) => {\n  const [data, setData] = React.useState(readRange())\n  React.useEffect(() => {\n    const callbackID = registerCallback(setData)\n    return () => deregisterCallback(callbackID)\n  }, [])\n  return (\n    <div>\n      <div style={{height: \"6px\"}}/>\n      <Material.Paper square>\n        <ListFactory header={(<Material.TableHead><Material.TableRow>{displayFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={data} generator={x => transportItemGenerator(x, x.internalUID, setSelTab)} style={TransportViewStyle}/>\n      </Material.Paper>\n    </div>\n  )\n}\n\nconst TransportViewStyle = {\n  font: \"20px Arial, sans-serif\"\n}\n\nconst transportItemGenerator = (data, index, setSelTab) => {\n  return (\n    <Material.TableRow key={data.internalUID} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n      <Material.TableCell>{data.vehicles}</Material.TableCell>\n      <Material.TableCell>{data.notes}</Material.TableCell>\n      <Material.TableCell>{data.status}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst detailItemGenerator = (data, index) => {\n  return (\n    <Material.TableRow key={data.internalUID}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n      <Material.TableCell>{data.vehicles}</Material.TableCell>\n      <Material.TableCell>{data.notes}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst notificationItemGenerator = (data, index, key, setSelTab) => {\n  return (\n    <Material.TableRow key={key} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}><Material.TableCell style={notificationItemStyle(data.latest)} align=\"center\">{data.title}</Material.TableCell></Material.TableRow>\n  )\n}\n\nconst notificationItemStyle = (latest) => {\n  if (latest === false) {\n    return {\n      color: \"grey\"\n    }\n  }\n  else {\n    return {}\n  }\n}\n\nconst addDetailTab = (data, index) => {\n  addTab([tabID, index])\n  tabID++\n}\n\nconst ListFactory = ({data, generator, style, header, tail}) => {\n  return (\n    <Material.TableContainer>\n      <Material.Table>\n        {header}\n        <Material.TableBody>\n          {data.map(generator)}\n        </Material.TableBody>\n        {tail}\n      </Material.Table>\n    </Material.TableContainer>\n  )\n}\n\nconst getCallbackSystem = (dataSource) => {\n\n  const registeredCallbacks = []\n\n  const registerCallback = (callback) => {\n    return registeredCallbacks.push(callback)-1\n  }\n\n  const deregisterCallback = (id) => {\n    if (id > -1 && id < registeredCallbacks.length) {\n      registeredCallbacks[id] = ()=>{}\n    }\n  }\n  \n  const notifyNewData = () => {\n    for (const callback of registeredCallbacks) {\n      callback(dataSource())\n    }\n  }\n\n  return [registerCallback, deregisterCallback, notifyNewData]\n}\n\nvar dataStore = []\n\nconst readNotifications = () => {\n  return notificationsStore\n}\n\nvar notificationsStore = []\n\nconst statuses = [\"Pending\", \"Submitted\", \"Recommended\"]\n\nconst formFields = [{name: \"name\", initialData: \"\", friendlyName: \"Purpose\"}, {name: \"startDateTime\", initialData: \"\", friendlyName: \"Start time\", fieldType: \"datetime\"}, {name: \"endDateTime\", initialData: \"\", friendlyName: \"End time\", fieldType: \"datetime\"}, {name: \"origin\", initialData: \"\", friendlyName: \"Reporting location\"}, {name: \"destination\", initialData: \"\", friendlyName: \"Destination\"}, {name: \"POC\", initialData: \"\", friendlyName: \"Contact person\"}, {name: \"POCPhone\", initialData: \"\", friendlyName: \"Contact person number\"}, {name: \"vehicles\", initialData: \"\", friendlyName: \"Vehicles\"}, {name: \"notes\", initialData: \"\", friendlyName: \"Notes\"}]\n\nconst dataDefaults = [{name: \"status\", initialData: \"Pending\", friendlyName: \"Status\"}]\n\nconst displayFields = [...formFields, ...dataDefaults]\n\nconst Tabs = ({children, selTab, setSelTab}) => {\n  const pre = [(<Material.Tab style={{opacity: 1, minWidth: 0, minHeight:0, padding: 0}} disableRipple selected label={<div style={{height: \"48px\", width: \"48px\"}}><img src={appLogo} height=\"48px\" width=\"48px\"/></div>}/>)]\n  return (\n    <div>\n      <Material.AppBar position=\"static\">\n        <Material.Tabs variant=\"scrollable\" value={Math.min(selTab, children.length-1)+pre.length}>\n          {[...pre , ...children.map((child, index) => {\n            const obj = {...child.props, removeCallback: () => child.props.removeCallback(index, children.length), onClick: () => {setSelTab(index)}, active: index === Math.min(selTab, children.length-1), key: child.props.mykey}\n            return (<Tab {...obj}></Tab>)\n          })]}\n        </Material.Tabs>\n      </Material.AppBar>\n      <div>\n        {children[Math.min(selTab, children.length-1)]}\n      </div>\n    </div>\n  )\n}\n\nconst Tab = ({label, onClick, active, removable, removeCallback}) => {\n  return (\n    <Material.Tab style={{padding: 0}} disableRipple selected label={(<span><Material.Tab label={label} onClick={onClick} selected={active ? true : null}/>\n      {removable ? (<Material.IconButton size=\"small\" onClick={removeCallback}><Icons.Close style={{fill: \"red\"}}/></Material.IconButton>) : undefined}\n      </span>)}/>\n  )\n}\n\nconst TabCloseStyle = {\n  font: \"16px Arial, sans-serif\",\n  margin: \"auto\"\n}\n\nconst [registerCallback, deregisterCallback, notifyNewData] = getCallbackSystem(readRange)\n\nconst [registerNotify, deregisterNotify, notifyNewN] = getCallbackSystem(readNotifications)\n\nReactDOM.render(\n  <div style={{textAlign: \"center\"}}>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/logo.58ed9303.jpg\";","export default __webpack_public_path__ + \"static/media/5sirlogo.a6ac04db.jpg\";"],"sourceRoot":""}