{"version":3,"sources":["searchRanker.js","index.js","resources/logo.jpg","resources/5sirlogo.jpg"],"names":["module","exports","makeRanker","data","run","idf","tf_","terms","toLowerCase","split","console","log","tagcollection","i","length","tags","Object","values","map","x","toString","flat","adda","j","push","iks","keys","Math","computeTfIdfs","ret","term","sort","a","b","setTabs","socket","ranker","require","serverURL","additionalTabs","tabID","App","React","tabs","mySetTabs","socketIOClient","secure","on","indents","writeToken","undefined","ackWriteToken","pendingWrites","dataStore","reverse","notifyNewData","notifications","notificationsStore","notifyNewN","emit","disconnect","selTab","setSelTab","label","mykey","v","readDataStore","name","removable","removeCallback","index","id","filter","detailPersistentStore","currSelTab","min","details","style","height","src","sir5logo","width","NotificationsPanel","myData","readNotifications","setData","callbackID","registerNotify","deregisterNotify","newData","encountered","internalUID","latest","square","generator","notificationItemGenerator","TransportViewStyle","DetailGenerator","header","formFields","friendlyName","detailItemGenerator","variant","native","value","status","onChange","event","target","statuses","val","onClick","editData","writeDataStore","result","currWriteToken","write","myPromise","Promise","resolve","appendDataStore","readRange","submitForm","FormFactory","fields","defaults","formPersistentStore","fieldStates","myPersistentStore","initialData","states","setStates","myStates","field","fieldType","noValidate","text","setText","formItemStyle","fullWidth","type","InputLabelProps","shrink","multiline","constitutedObject","fieldName","normalizer","normalizers","initializedFields","initializeFields","slice","display","justifyContent","padding","newIndentPersistentStore","NewIndentView","dataDefaults","TransportView","range","registerCallback","current","myRanker","myQuery","deregisterCallback","search","setSearch","last","clearTimeout","setTimeout","onCancelSearch","onRequestSearch","margin","displayFields","transportItemGenerator","font","addDetailTab","Infinity","startDateTime","endDateTime","origin","destination","POC","POCPhone","vehicles","notes","key","notificationItemStyle","align","title","color","tab","ListFactory","tail","getCallbackSystem","dataSource","registeredCallbacks","callback","Tabs","children","pre","opacity","minWidth","minHeight","disableRipple","selected","appLogo","position","top","child","obj","props","active","Tab","size","fill","ReactDOM","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.373adbb1.chunk.js","sourcesContent":["var computeTfIdfs = (tagcollection, tf_, idf) => { //tf-idf implemented directly according to wikipedia's description of tf-idf\n  //we have to iterate through all tags anyway to compute any single tfidf, no point using lazy computation\n  //just get it done once and never do it again until the next inventory update\n  //if we are brave and adventurous we can try using delta updates and delta'ing the tfidf cache\n  for (var i = 0; i < tagcollection.length; i++){\n    var tags = Object.values(tagcollection[i]).map(x => x.toString().toLowerCase().split(/\\b\\s+/)).flat()\n    console.log(tags)\n    var adda = {}\n    for (var j = 0; j < tags.length; j++){\n      if (!adda[tags[j]]){\n        if (!idf[tags[j]]){\n          idf[tags[j]] = 0\n        }\n        idf[tags[j]]++\n        adda[tags[j]] = 0\n      }\n      adda[tags[j]] += 1/tags.length\n    }\n    tf_.push(adda)\n  }\n  const iks = Object.keys(idf)\n  for (var i = 0; i < iks.length; i++){\n    if (idf[iks[i]]){\n      idf[iks[i]] = Math.log(tagcollection.length/idf[iks[i]])\n    }\n    else{\n      idf[iks[i]] = 0\n    }\n  }\n}\nvar makeRanker = (data) => {\n  var run = 0\n  var idf = {}\n  var tf_ = []\n  return (terms) => {\n    var terms = terms.toLowerCase().split(/\\b\\s+/)\n    console.log(terms)\n    console.log(data)\n    if (!run){\n      computeTfIdfs(data, tf_, idf)\n      run = 1\n    }\n    var ret = []\n    for (var i = 0; i < data.length; i++){\n      ret.push([0, 0, i, data[i]])\n    }\n    for (var i = 0; i < terms.length; i++){\n      var term = terms[i]\n      console.log(term)\n      for (var j = 0; j < data.length; j++){\n        if (tf_[j][term]){\n          console.log(tf_[j][term])\n          console.log(idf[term])\n          ret[j][0] -= tf_[j][term] * idf[term]\n          ret[j][1] -= tf_[j][term]\n        }\n      }\n    }\n    ret = ret.sort((a, b) => {\n      var i = 0\n      while(a[i] === b[i]){\n        i++\n      }\n      return a[i]-b[i]\n    }).map(x => x[3])\n    return ret\n  }\n}\nmodule.exports = {\n  makeRanker: makeRanker\n}","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport socketIOClient from \"socket.io-client\";\n\nimport * as Material from \"@material-ui/core\"\nimport * as Icons from \"@material-ui/icons\"\nimport SearchBar from \"material-ui-search-bar\"\n\nimport appLogo from \"./resources/logo.jpg\"\nimport sir5logo from \"./resources/5sirlogo.jpg\"\n\nconst ranker = require(\"./searchRanker.js\")\n\nvar serverURL = \"https://murmuring-ocean-38436.herokuapp.com/\"\n\nvar setTabs\nvar additionalTabs = []\nvar tabID = 0\nconst addTab = (tab) => {\n  additionalTabs = [...additionalTabs]\n  additionalTabs.push(tab)\n  setTabs(additionalTabs)\n}\nconst removeTab = (id) => {\n  additionalTabs = [...additionalTabs].filter(x => x[0] !== id)\n  detailPersistentStore[id] = undefined\n  setTabs(additionalTabs)\n}\n\nvar socket\n\nconst App = () => {\n  \n  var [tabs, mySetTabs] = React.useState([])\n  setTabs = mySetTabs\n  React.useEffect(() => {\n    socket = socketIOClient(serverURL, {secure: true});\n    socket.on(\"sendIndents\", (indents, writeToken) => {\n      if (writeToken !== undefined) {\n        if (writeToken < ackWriteToken) {\n          return\n        }\n        ackWriteToken = writeToken\n        if (pendingWrites[writeToken] !== undefined) {\n          pendingWrites[writeToken]()\n        }\n      }\n      dataStore = [...indents].reverse()\n      notifyNewData()\n    })\n    socket.on(\"sendNotifications\", (notifications) => {\n      notificationsStore = [...notifications].reverse()\n      notifyNewN()\n    })\n    socket.emit(\"requestIndents\", \"\")\n    socket.emit(\"requestNotifications\", \"\")\n    return () => {\n      socket.disconnect()\n    }\n  }, [])\n  const [selTab, setSelTab] = React.useState(0);\n\n  return (\n    <div>\n      <Tabs selTab={selTab} setSelTab={setSelTab}>\n        {[(<div label=\"view indents\" key=\"defaultTab1\" mykey=\"defaultTab1\">\n          <TransportView setSelTab={setSelTab}/>\n        </div>),\n        (<div label=\"new indent\" key=\"defaultTab2\" mykey=\"defaultTab2\">\n          <NewIndentView/>\n        </div>),\n        (<div label=\"notifications\" key=\"defaultTab3\" mykey=\"defaultTab3\">\n          <NotificationsPanel setSelTab={setSelTab}/>\n        </div>), ...tabs.map((v, i) => (<DetailGenerator mykey={v[0]} label={readDataStore(v[1]).name} removable=\"true\" removeCallback={(index, length) => {\n          removeTab(v[0])\n          const currSelTab = Math.min(selTab, length-1)\n          if (currSelTab > index) {\n            setSelTab(currSelTab-1)\n          }\n        }} details={v} key={v[0]} />))]}\n      </Tabs>\n      <div style={{height: \"6px\"}}/>\n      <img src={sir5logo} width=\"192px\"/>\n    </div>\n  );\n}\n\nconst DevPanel = () => {\n  const [myServerURL, setServerURL] = React.useState(serverURL)\n  const [response, setResponse] = React.useState(\"\");\n  const myListener = data => {\n    setResponse(data)\n  }\n\n  React.useEffect(() => {\n    socket.on(\"FromAPI\", myListener);\n    return () => {\n      socket.off(\"FromAPI\", myListener)\n    }\n  }, []);\n\n  return (<div>\n    <div>Server URL</div><textarea value={myServerURL} onChange={(event) => {\n      serverURL = event.target.value\n      setServerURL(serverURL)\n    }}/>\n    <div>It's {response}</div>\n  </div>)\n}\n\nconst NotificationsPanel = ({setSelTab}) => {\n  var myData = readNotifications()\n  const [data, setData] = React.useState(myData)\n  React.useEffect(() => {\n    const callbackID = registerNotify(setData)\n    return () => deregisterNotify(callbackID)\n  }, [])\n  var newData = []\n  const encountered = {}\n  for (var i = 0; i < myData.length; i++) {\n    if (encountered[myData[i].internalUID] === true) {\n      newData.push({...myData[i], latest: false})\n    }\n    else {\n      newData.push({...myData[i], latest: true})\n    }\n    encountered[myData[i].internalUID] = true\n  }\n  return (\n    <div>\n      <div style={{height: \"6px\"}}/>\n      <Material.Paper square>\n        <ListFactory data={newData} generator={(x, index) => notificationItemGenerator(x, x.internalUID, \"\"+x.internalUID+index, setSelTab)} style={TransportViewStyle}/>\n      </Material.Paper>\n    </div>\n  )\n}\n\nconst detailPersistentStore = {}\n\nconst DetailGenerator = ({details}) => {\n  const [id, index] = details\n  if (detailPersistentStore[id] === undefined) {\n    detailPersistentStore[id] = readDataStore(index)\n  }\n  const [data, setData] = React.useState(detailPersistentStore[id])\n  return (\n  <div>\n    <div style={{height:\"6px\"}}/>\n    <Material.Paper square>\n      <ListFactory header={(<Material.TableHead><Material.TableRow>{formFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={[data]} generator={x => detailItemGenerator(x, x.internalUID)} style={TransportViewStyle}/>\n    </Material.Paper>\n    <div style={{height:\"6px\"}}/>\n    <Material.Select variant=\"outlined\" native value={data.status} onChange={(event) => {\n      detailPersistentStore[id] = {...detailPersistentStore[id], status: event.target.value}\n      setData(detailPersistentStore[id])\n    }}>\n    {statuses.map((val, index) => (<option key={index} value={val}>{val}</option>))}\n    </Material.Select>\n    <Material.Button variant=\"outlined\" onClick={() => {editData(index, detailPersistentStore[id])}}>Save</Material.Button>\n  </div>\n  )\n}\n\nconst editData = async (index, newData) => {\n  const refresh = await writeDataStore(index, newData)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst readDataStore = (internalUID) => {\n  const result = dataStore.filter(x => x.internalUID === internalUID)\n  if (result.length === 0) {\n    return undefined\n  }\n  else {\n    return result[0]\n  }\n}\n\nvar ackWriteToken = 0\nvar currWriteToken = 0\nvar pendingWrites = []\n\n\nconst writeDataStore = async (internalUID, write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"writeDataStore\", [internalUID, write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst appendDataStore = async (write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"appendDataStore\", [write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst readRange = () => {\n  return dataStore\n}\n\nconst submitForm = async (data) => {\n  const refresh = await appendDataStore(data)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst FormFactory = ({fields, defaults, formPersistentStore}) => {\n  var fieldStates = []\n  var myPersistentStore = formPersistentStore === undefined ? {} : formPersistentStore\n  if (myPersistentStore.data === undefined) {\n    myPersistentStore.data = fields.map(x => x.initialData)\n  }\n  const [states, setStates] = React.useState(myPersistentStore.data)\n  var myStates = states\n  for (var index = 0; index < fields.length; index++) {\n    const i = index\n    const field = fields[i]\n    fieldStates.push([states[i], x => {\n      myStates = [...myStates]\n      myStates[i] = x\n      myPersistentStore.data = myStates\n      setStates(myStates)\n    },field.initialData, field.name, field.friendlyName, field.fieldType])\n  }\n  const initializeFields = () => {\n    const initializedFields = fields.map(x => x.initialData)\n    myPersistentStore.data = initializedFields\n    setStates(initializedFields)\n  }\n  const submit = () => {\n    var constitutedObject = {}\n    for (const {name, initialData} of defaults) {\n      constitutedObject[name] = initialData\n    }\n    for (const [text, setText, initialData, fieldName, friendlyName, fieldType] of fieldStates) {\n      const normalizer = normalizers[fieldType]\n      constitutedObject[fieldName] = normalizer ? normalizer(text) : text\n    }\n    submitForm(constitutedObject)\n    initializeFields()\n  }\n  return (\n  <form noValidate>\n  <div>\n  {fieldStates.map(([text, setText, initialData, fieldName, friendlyName, fieldType], index) => {\n    return (\n      <div style={formItemStyle} key={index}>\n      {fieldType === \"datetime\" ?\n      (<Material.TextField\n        id=\"datetime-local\"\n        fullWidth={true}\n        label={friendlyName}\n        type=\"datetime-local\"\n        variant=\"outlined\"\n        onChange={(event) => setText(event.target.value)}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />)\n      :(<Material.TextField fullWidth={true} multiline label={friendlyName} variant=\"outlined\" value={text} onChange={(event) => setText(event.target.value)} InputLabelProps={{shrink: true,}}/>)\n      }\n      </div>\n    )\n  })}\n  </div>\n  <Material.Button variant=\"outlined\" onClick={submit}>submit</Material.Button>\n  </form>\n  )\n}\n\nconst normalizers = {\n  \"datetime\": x => {\n    try {\n      if (x.length > 0) {\n        return x.slice(8, 10) + \"/\" + x.slice(5, 7) + \"/\" + x.slice(0, 4) + \" \" + x.slice(11, 16)\n      }\n    }\n    catch {\n    }\n    return x\n  }\n}\n\nconst formItemStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"5px\"\n}\n\nconst newIndentPersistentStore = {}\n\nconst NewIndentView = () => {\n  return (<div style={TransportViewStyle}><div style={{height: \"6px\"}}/><FormFactory fields={formFields} defaults={dataDefaults} formPersistentStore={newIndentPersistentStore}/></div>)\n}\n\nconst DEBOUNCE_PERIOD = 100\n\nconst TransportView = ({setSelTab}) => {\n  const range = readRange()\n  const [data, setData] = React.useState(range)\n  React.useEffect(() => {\n    const callbackID = registerCallback(value => {\n      myData.current = value\n      myRanker.current = ranker.makeRanker(value)\n      setData(myQuery.current !== \"\" ? myRanker.current(myQuery.current) : value)\n    })\n    return () => deregisterCallback(callbackID)\n  }, [])\n  const [search, setSearch] = React.useState(\"\")\n  const last = React.useRef(null)\n  const myData = React.useRef(range)\n  const myRanker = React.useRef(ranker.makeRanker(range))\n  const myQuery = React.useRef(\"\")\n  const onChange = value => {\n    setSearch(value)\n    if (last.current !== null) {\n      clearTimeout(last.current)\n      last.current = null\n    }\n    last.current = setTimeout(() => {\n      console.log(\"hi\")\n      myQuery.current = value\n      setData(value !== \"\" ? myRanker.current(value) : myData.current)\n      last.current = null\n    }, DEBOUNCE_PERIOD)\n  }\n  return (\n    <div>\n      <div style={{height: \"12px\"}}/>\n      <SearchBar\n        value={search}\n        onChange={onChange}\n        onCancelSearch={() => onChange(\"\")}\n        onRequestSearch={()=>{}}\n        style={{width: \"90%\", margin: \"auto\"}}\n        />\n      <div style={{height: \"6px\"}}/>\n      <Material.Paper square>\n        <ListFactory header={(<Material.TableHead><Material.TableRow>{displayFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={data} generator={x => transportItemGenerator(x, x.internalUID, setSelTab)} style={TransportViewStyle}/>\n      </Material.Paper>\n    </div>\n  )\n}\n\nconst TransportViewStyle = {\n  font: \"20px Arial, sans-serif\"\n}\n\nconst transportItemGenerator = (data, index, setSelTab) => {\n  return (\n    <Material.TableRow key={data.internalUID} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n      <Material.TableCell>{data.vehicles}</Material.TableCell>\n      <Material.TableCell>{data.notes}</Material.TableCell>\n      <Material.TableCell>{data.status}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst detailItemGenerator = (data, index) => {\n  return (\n    <Material.TableRow key={data.internalUID}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n      <Material.TableCell>{data.vehicles}</Material.TableCell>\n      <Material.TableCell>{data.notes}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst notificationItemGenerator = (data, index, key, setSelTab) => {\n  return (\n    <Material.TableRow key={key} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}><Material.TableCell style={notificationItemStyle(data.latest)} align=\"center\">{data.title}</Material.TableCell></Material.TableRow>\n  )\n}\n\nconst notificationItemStyle = (latest) => {\n  if (latest === false) {\n    return {\n      color: \"grey\"\n    }\n  }\n  else {\n    return {}\n  }\n}\n\nconst addDetailTab = (data, index) => {\n  addTab([tabID, index])\n  tabID++\n}\n\nconst ListFactory = ({data, generator, style, header, tail}) => {\n  return (\n    <Material.TableContainer>\n      <Material.Table>\n        {header}\n        <Material.TableBody>\n          {data.map(generator)}\n        </Material.TableBody>\n        {tail}\n      </Material.Table>\n    </Material.TableContainer>\n  )\n}\n\nconst getCallbackSystem = (dataSource) => {\n\n  const registeredCallbacks = []\n\n  const registerCallback = (callback) => {\n    return registeredCallbacks.push(callback)-1\n  }\n\n  const deregisterCallback = (id) => {\n    if (id > -1 && id < registeredCallbacks.length) {\n      registeredCallbacks[id] = ()=>{}\n    }\n  }\n  \n  const notifyNewData = () => {\n    for (const callback of registeredCallbacks) {\n      callback(dataSource())\n    }\n  }\n\n  return [registerCallback, deregisterCallback, notifyNewData]\n}\n\nvar dataStore = []\n\nconst readNotifications = () => {\n  return notificationsStore\n}\n\nvar notificationsStore = []\n\nconst statuses = [\"Pending\", \"Submitted\", \"Recommended\"]\n\nconst formFields = [{name: \"name\", initialData: \"\", friendlyName: \"Purpose\"}, {name: \"startDateTime\", initialData: \"\", friendlyName: \"Start time\", fieldType: \"datetime\"}, {name: \"endDateTime\", initialData: \"\", friendlyName: \"End time\", fieldType: \"datetime\"}, {name: \"origin\", initialData: \"\", friendlyName: \"Reporting location\"}, {name: \"destination\", initialData: \"\", friendlyName: \"Destination\"}, {name: \"POC\", initialData: \"\", friendlyName: \"Contact person\"}, {name: \"POCPhone\", initialData: \"\", friendlyName: \"Contact person number\"}, {name: \"vehicles\", initialData: \"\", friendlyName: \"Vehicles\"}, {name: \"notes\", initialData: \"\", friendlyName: \"Notes\"}]\n\nconst dataDefaults = [{name: \"status\", initialData: \"Pending\", friendlyName: \"Status\"}]\n\nconst displayFields = [...formFields, ...dataDefaults]\n\nconst Tabs = ({children, selTab, setSelTab}) => {\n  const pre = [(<Material.Tab style={{opacity: 1, minWidth: 0, minHeight:0, padding: 0}} disableRipple selected label={<div style={{height: \"48px\", width: \"48px\"}}><img src={appLogo} height=\"48px\" width=\"48px\"/></div>}/>)]\n  return (\n    <div>\n      <Material.AppBar position=\"sticky\" style={{top: \"env(safe-area-inset-top)\"}}>\n        <Material.Tabs variant=\"scrollable\" value={Math.min(selTab, children.length-1)+pre.length}>\n          {[...pre , ...children.map((child, index) => {\n            const obj = {...child.props, removeCallback: () => child.props.removeCallback(index, children.length), onClick: () => {setSelTab(index)}, active: index === Math.min(selTab, children.length-1), key: child.props.mykey}\n            return (<Tab {...obj}></Tab>)\n          })]}\n        </Material.Tabs>\n      </Material.AppBar>\n      <div>\n        {children[Math.min(selTab, children.length-1)]}\n      </div>\n    </div>\n  )\n}\n\nconst Tab = ({label, onClick, active, removable, removeCallback}) => {\n  return (\n    <Material.Tab style={{padding: 0}} disableRipple selected label={(<span><Material.Tab label={label} onClick={onClick} selected={active ? true : null}/>\n      {removable ? (<Material.IconButton size=\"small\" onClick={removeCallback}><Icons.Close style={{fill: \"red\"}}/></Material.IconButton>) : undefined}\n      </span>)}/>\n  )\n}\n\nconst TabCloseStyle = {\n  font: \"16px Arial, sans-serif\",\n  margin: \"auto\"\n}\n\nconst [registerCallback, deregisterCallback, notifyNewData] = getCallbackSystem(readRange)\n\nconst [registerNotify, deregisterNotify, notifyNewN] = getCallbackSystem(readNotifications)\n\nReactDOM.render(\n  <div style={{textAlign: \"center\"}}>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/logo.58ed9303.jpg\";","export default __webpack_public_path__ + \"static/media/5sirlogo.a6ac04db.jpg\";"],"sourceRoot":""}