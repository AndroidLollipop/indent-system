{"version":3,"sources":["index.js","resources/logo.jpg","resources/5sirlogo.jpg"],"names":["setTabs","socket","serverURL","additionalTabs","tabID","App","React","tabs","mySetTabs","socketIOClient","secure","on","indents","writeToken","undefined","ackWriteToken","pendingWrites","dataStore","notifyNewData","notifications","notificationsStore","notifyNewN","emit","disconnect","selTab","setSelTab","label","mykey","map","v","i","readDataStore","name","removable","removeCallback","index","length","id","filter","x","detailPersistentStore","currSelTab","Math","min","details","style","height","src","sir5logo","width","NotificationsPanel","myData","readNotifications","setData","callbackID","registerNotify","deregisterNotify","newData","encountered","internalUID","push","latest","data","generator","notificationItemGenerator","TransportViewStyle","DetailGenerator","header","formFields","friendlyName","detailItemGenerator","variant","native","value","status","onChange","event","target","statuses","val","onClick","editData","a","writeDataStore","result","currWriteToken","write","myPromise","Promise","resolve","appendDataStore","readRange","submitForm","FormFactory","fields","defaults","fieldStates","initialData","states","setStates","myStates","field","noValidate","text","setText","formItemStyle","multiline","constitutedObject","display","justifyContent","padding","NewIndentView","dataDefaults","TransportView","registerCallback","deregisterCallback","displayFields","transportItemGenerator","font","addDetailTab","Infinity","startDateTime","endDateTime","origin","destination","POC","POCPhone","key","notificationItemStyle","align","title","color","tab","ListFactory","tail","getCallbackSystem","dataSource","registeredCallbacks","callback","Tabs","children","pre","appLogo","position","child","obj","props","active","Tab","disableRipple","selected","size","fill","ReactDOM","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.5f47307f.chunk.js","sourcesContent":["import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport socketIOClient from \"socket.io-client\";\n\nimport * as Material from \"@material-ui/core\"\nimport * as Icons from \"@material-ui/icons\"\n\nimport appLogo from \"./resources/logo.jpg\"\nimport sir5logo from \"./resources/5sirlogo.jpg\"\n\nvar serverURL = \"https://murmuring-ocean-38436.herokuapp.com/\"\n\nvar setTabs\nvar additionalTabs = []\nvar tabID = 0\nconst addTab = (tab) => {\n  additionalTabs = [...additionalTabs]\n  additionalTabs.push(tab)\n  setTabs(additionalTabs)\n}\nconst removeTab = (id) => {\n  additionalTabs = [...additionalTabs].filter(x => x[0] !== id)\n  detailPersistentStore[id] = undefined\n  setTabs(additionalTabs)\n}\n\nvar socket\n\nconst App = () => {\n  \n  var [tabs, mySetTabs] = React.useState([])\n  setTabs = mySetTabs\n  React.useEffect(() => {\n    socket = socketIOClient(serverURL, {secure: true});\n    socket.on(\"sendIndents\", (indents, writeToken) => {\n      if (writeToken !== undefined) {\n        if (writeToken < ackWriteToken) {\n          return\n        }\n        ackWriteToken = writeToken\n        if (pendingWrites[writeToken] !== undefined) {\n          pendingWrites[writeToken]()\n        }\n      }\n      dataStore = [...indents]\n      notifyNewData()\n    })\n    socket.on(\"sendNotifications\", (notifications) => {\n      notificationsStore = [...notifications]\n      notifyNewN()\n    })\n    socket.emit(\"requestIndents\", \"\")\n    socket.emit(\"requestNotifications\", \"\")\n    return () => {\n      socket.disconnect()\n    }\n  }, [])\n  const [selTab, setSelTab] = React.useState(0);\n\n  return (\n    <div>\n      <Tabs selTab={selTab} setSelTab={setSelTab}>\n        {[(<div label=\"view indents\" key=\"defaultTab1\" mykey=\"defaultTab1\">\n          <TransportView setSelTab={setSelTab}/>\n        </div>),\n        (<div label=\"new indent\" key=\"defaultTab2\" mykey=\"defaultTab2\">\n          <NewIndentView/>\n        </div>),\n        (<div label=\"notifications\" key=\"defaultTab3\" mykey=\"defaultTab3\">\n          <NotificationsPanel setSelTab={setSelTab}/>\n        </div>), ...tabs.map((v, i) => (<DetailGenerator mykey={v[0]} label={readDataStore(v[1]).name} removable=\"true\" removeCallback={(index, length) => {\n          removeTab(v[0])\n          const currSelTab = Math.min(selTab, length-1)\n          if (currSelTab > index) {\n            setSelTab(currSelTab-1)\n          }\n        }} details={v} key={v[0]} />))]}\n      </Tabs>\n      <div style={{height: \"6px\"}}/>\n      <img src={sir5logo} width=\"192px\"/>\n    </div>\n  );\n}\n\nconst DevPanel = () => {\n  const [myServerURL, setServerURL] = React.useState(serverURL)\n  const [response, setResponse] = React.useState(\"\");\n  const myListener = data => {\n    setResponse(data)\n  }\n\n  React.useEffect(() => {\n    socket.on(\"FromAPI\", myListener);\n    return () => {\n      socket.off(\"FromAPI\", myListener)\n    }\n  }, []);\n\n  return (<div>\n    <div>Server URL</div><textarea value={myServerURL} onChange={(event) => {\n      serverURL = event.target.value\n      setServerURL(serverURL)\n    }}/>\n    <div>It's {response}</div>\n  </div>)\n}\n\nconst NotificationsPanel = ({setSelTab}) => {\n  var myData = readNotifications()\n  const [data, setData] = React.useState(myData)\n  React.useEffect(() => {\n    const callbackID = registerNotify(setData)\n    return () => deregisterNotify(callbackID)\n  }, [])\n  var newData = []\n  const encountered = {}\n  for (var i = myData.length-1; i > -1; i--) {\n    if (encountered[myData[i].internalUID] === true) {\n      newData.push({...myData[i], latest: false})\n    }\n    else {\n      newData.push({...myData[i], latest: true})\n    }\n    encountered[myData[i].internalUID] = true\n  }\n  return (\n    <div>\n      <div style={{height: \"6px\"}}/>\n      <Material.Paper>\n        <ListFactory data={newData} generator={(x, index) => notificationItemGenerator(x, x.internalUID, \"\"+x.internalUID+index, setSelTab)} style={TransportViewStyle}/>\n      </Material.Paper>\n    </div>\n  )\n}\n\nconst detailPersistentStore = {}\n\nconst DetailGenerator = ({details}) => {\n  const [id, index] = details\n  if (detailPersistentStore[id] === undefined) {\n    detailPersistentStore[id] = readDataStore(index)\n  }\n  const [data, setData] = React.useState(detailPersistentStore[id])\n  return (\n  <div>\n    <div style={{height:\"6px\"}}/>\n    <Material.Paper>\n      <ListFactory header={(<Material.TableHead><Material.TableRow>{formFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={[data]} generator={x => detailItemGenerator(x, x.internalUID)} style={TransportViewStyle}/>\n    </Material.Paper>\n    <div style={{height:\"6px\"}}/>\n    <Material.Select variant=\"outlined\" native value={data.status} onChange={(event) => {\n      detailPersistentStore[id] = {...detailPersistentStore[id], status: event.target.value}\n      setData(detailPersistentStore[id])\n    }}>\n    {statuses.map((val, index) => (<option key={index} value={val}>{val}</option>))}\n    </Material.Select>\n    <Material.Button variant=\"outlined\" onClick={() => {editData(index, detailPersistentStore[id])}}>Save</Material.Button>\n  </div>\n  )\n}\n\nconst editData = async (index, newData) => {\n  const refresh = await writeDataStore(index, newData)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst readDataStore = (internalUID) => {\n  const result = dataStore.filter(x => x.internalUID === internalUID)\n  if (result.length === 0) {\n    return undefined\n  }\n  else {\n    return result[0]\n  }\n}\n\nvar ackWriteToken = 0\nvar currWriteToken = 0\nvar pendingWrites = []\n\n\nconst writeDataStore = async (internalUID, write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"writeDataStore\", [internalUID, write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst appendDataStore = async (write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"appendDataStore\", [write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst readRange = () => {\n  return dataStore\n}\n\nconst submitForm = async (data) => {\n  const refresh = await appendDataStore(data)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst FormFactory = ({fields, defaults}) => {\n  var fieldStates = []\n  const [states, setStates] = React.useState(fields.map(x => x.initialData))\n  var myStates = states\n  for (var index = 0; index < fields.length; index++) {\n    const i = index\n    const field = fields[i]\n    fieldStates.push([states[i], x => {\n      myStates = [...myStates]\n      myStates[i] = x\n      setStates(myStates)\n    },field.initialData, field.name, field.friendlyName])\n  }\n  const initializeFields = () => {\n    setStates(fields.map(x => x.initialData))\n  }\n  const submit = () => {\n    var constitutedObject = {}\n    for (const {name, initialData} of defaults) {\n      constitutedObject[name] = initialData\n    }\n    for (const [text, setText, initialData, fieldName] of fieldStates) {\n      constitutedObject[fieldName] = text\n    }\n    submitForm(constitutedObject)\n    initializeFields()\n  }\n  return (\n  <form noValidate>\n  <div>\n  {fieldStates.map(([text, setText, initialData, fieldName, friendlyName], index) => {\n    return (\n      <div style={formItemStyle} key={index}>\n      <Material.TextField multiline label={friendlyName} variant=\"outlined\" value={text} onChange={(event) => setText(event.target.value)}/>\n      </div>\n    )\n  })}\n  </div>\n  <Material.Button variant=\"outlined\" onClick={submit}>submit</Material.Button>\n  </form>\n  )\n}\n\nconst formItemStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"5px\"\n}\n\nconst NewIndentView = () => {\n  return (<div style={TransportViewStyle}><FormFactory fields={formFields} defaults={dataDefaults}/></div>)\n}\n\nconst TransportView = ({setSelTab}) => {\n  const [data, setData] = React.useState(readRange())\n  React.useEffect(() => {\n    const callbackID = registerCallback(setData)\n    return () => deregisterCallback(callbackID)\n  }, [])\n  return (\n    <div>\n      <div style={{height: \"6px\"}}/>\n      <Material.Paper>\n        <ListFactory header={(<Material.TableHead><Material.TableRow>{displayFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={data} generator={x => transportItemGenerator(x, x.internalUID, setSelTab)} style={TransportViewStyle}/>\n      </Material.Paper>\n    </div>\n  )\n}\n\nconst TransportViewStyle = {\n  font: \"20px Arial, sans-serif\"\n}\n\nconst transportItemGenerator = (data, index, setSelTab) => {\n  return (\n    <Material.TableRow key={data.internalUID} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n      <Material.TableCell>{data.status}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst detailItemGenerator = (data, index) => {\n  return (\n    <Material.TableRow key={data.internalUID}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst notificationItemGenerator = (data, index, key, setSelTab) => {\n  return (\n    <Material.TableRow key={key} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}><Material.TableCell style={notificationItemStyle(data.latest)} align=\"center\">{data.title}</Material.TableCell></Material.TableRow>\n  )\n}\n\nconst notificationItemStyle = (latest) => {\n  if (latest === false) {\n    return {\n      color: \"grey\"\n    }\n  }\n  else {\n    return {}\n  }\n}\n\nconst addDetailTab = (data, index) => {\n  addTab([tabID, index])\n  tabID++\n}\n\nconst ListFactory = ({data, generator, style, header, tail}) => {\n  return (\n    <Material.TableContainer>\n      <Material.Table>\n        {header}\n        <Material.TableBody>\n          {data.map(generator)}\n        </Material.TableBody>\n        {tail}\n      </Material.Table>\n    </Material.TableContainer>\n  )\n}\n\nconst getCallbackSystem = (dataSource) => {\n\n  const registeredCallbacks = []\n\n  const registerCallback = (callback) => {\n    return registeredCallbacks.push(callback)-1\n  }\n\n  const deregisterCallback = (id) => {\n    if (id > -1 && id < registeredCallbacks.length) {\n      registeredCallbacks[id] = ()=>{}\n    }\n  }\n  \n  const notifyNewData = () => {\n    for (const callback of registeredCallbacks) {\n      callback(dataSource())\n    }\n  }\n\n  return [registerCallback, deregisterCallback, notifyNewData]\n}\n\nvar dataStore = []\n\nconst readNotifications = () => {\n  return notificationsStore\n}\n\nvar notificationsStore = []\n\nconst statuses = [\"Pending\", \"Submitted\", \"Recommended\"]\n\nconst formFields = [{name: \"name\", initialData: \"\", friendlyName: \"Purpose\"}, {name: \"startDateTime\", initialData: \"\", friendlyName: \"Start time\"}, {name: \"endDateTime\", initialData: \"\", friendlyName: \"End time\"}, {name: \"origin\", initialData: \"\", friendlyName: \"Reporting location\"}, {name: \"destination\", initialData: \"\", friendlyName: \"Destination\"}, {name: \"POC\", initialData: \"\", friendlyName: \"Contact person\"}, {name: \"POCPhone\", initialData: \"\", friendlyName: \"Contact person number\"}]\n\nconst dataDefaults = [{name: \"status\", initialData: \"Pending\", friendlyName: \"Status\"}]\n\nconst displayFields = [...formFields, ...dataDefaults]\n\nconst Tabs = ({children, selTab, setSelTab}) => {\n  const pre = [(<div style={{height: \"48px\", width: \"48px\"}}><img src={appLogo} height=\"48px\" width=\"48px\"/></div>)]\n  return (\n    <div>\n      <Material.AppBar position=\"static\">\n        <Material.Tabs variant=\"scrollable\" value={Math.min(selTab, children.length-1)+pre.length}>\n          {[...pre , ...children.map((child, index) => {\n            const obj = {...child.props, removeCallback: () => child.props.removeCallback(index, children.length), onClick: () => {setSelTab(index)}, active: index === Math.min(selTab, children.length-1), key: child.props.mykey}\n            return (<Tab {...obj}></Tab>)\n          })]}\n        </Material.Tabs>\n      </Material.AppBar>\n      <div>\n        {children[Math.min(selTab, children.length-1)]}\n      </div>\n    </div>\n  )\n}\n\nconst Tab = ({label, onClick, active, removable, removeCallback}) => {\n  return (\n    <Material.Tab style={{padding: 0}} disableRipple selected label={(<span><Material.Tab label={label} onClick={onClick} selected={active ? true : null}/>\n      {removable ? (<Material.IconButton size=\"small\" onClick={removeCallback}><Icons.Close style={{fill: \"red\"}}/></Material.IconButton>) : undefined}\n      </span>)}/>\n  )\n}\n\nconst TabCloseStyle = {\n  font: \"16px Arial, sans-serif\",\n  margin: \"auto\"\n}\n\nconst [registerCallback, deregisterCallback, notifyNewData] = getCallbackSystem(readRange)\n\nconst [registerNotify, deregisterNotify, notifyNewN] = getCallbackSystem(readNotifications)\n\nReactDOM.render(\n  <div style={{textAlign: \"center\"}}>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/logo.58ed9303.jpg\";","export default __webpack_public_path__ + \"static/media/5sirlogo.a6ac04db.jpg\";"],"sourceRoot":""}