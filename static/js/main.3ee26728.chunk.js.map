{"version":3,"sources":["index.js"],"names":["setTabs","socket","serverURL","additionalTabs","tabID","App","React","tabs","mySetTabs","socketIOClient","secure","on","indents","writeToken","undefined","ackWriteToken","pendingWrites","dataStore","notifyNewData","notifications","notificationsStore","notifyNewN","emit","disconnect","selTab","setSelTab","Tabs","label","mykey","TransportView","NewIndentView","NotificationsPanel","map","v","i","DetailGenerator","readDataStore","name","removable","removeCallback","index","length","id","filter","x","detailPersistentStore","currSelTab","Math","min","details","myData","readNotifications","setData","callbackID","registerNotify","deregisterNotify","newData","encountered","internalUID","push","latest","ListFactory","data","generator","notificationItemGenerator","style","TransportViewStyle","header","formFields","friendlyName","detailItemGenerator","variant","native","value","status","onChange","event","target","statuses","val","onClick","editData","a","writeDataStore","result","currWriteToken","write","myPromise","Promise","resolve","appendDataStore","readRange","submitForm","FormFactory","fields","defaults","fieldStates","initialData","states","setStates","myStates","field","noValidate","text","setText","formItemStyle","multiline","constitutedObject","display","justifyContent","padding","dataDefaults","registerCallback","deregisterCallback","displayFields","transportItemGenerator","font","addDetailTab","Infinity","startDateTime","endDateTime","origin","destination","POC","POCPhone","key","notificationItemStyle","align","title","color","tab","tail","getCallbackSystem","dataSource","registeredCallbacks","callback","children","position","centered","child","obj","props","active","Tab","disableRipple","selected","size","fill","ReactDOM","textAlign","document","getElementById"],"mappings":"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","file":"static/js/main.3ee26728.chunk.js","sourcesContent":["import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport socketIOClient from \"socket.io-client\";\n\nimport * as Material from \"@material-ui/core\"\nimport * as Icons from \"@material-ui/icons\"\n\nvar serverURL = \"https://murmuring-ocean-38436.herokuapp.com/\"\n\nvar setTabs\nvar additionalTabs = []\nvar tabID = 0\nconst addTab = (tab) => {\n  additionalTabs = [...additionalTabs]\n  additionalTabs.push(tab)\n  setTabs(additionalTabs)\n}\nconst removeTab = (id) => {\n  additionalTabs = [...additionalTabs].filter(x => x[0] !== id)\n  detailPersistentStore[id] = undefined\n  setTabs(additionalTabs)\n}\n\nvar socket\n\nconst App = () => {\n  \n  var [tabs, mySetTabs] = React.useState([])\n  setTabs = mySetTabs\n  React.useEffect(() => {\n    socket = socketIOClient(serverURL, {secure: true});\n    socket.on(\"sendIndents\", (indents, writeToken) => {\n      if (writeToken !== undefined) {\n        if (writeToken < ackWriteToken) {\n          return\n        }\n        ackWriteToken = writeToken\n        if (pendingWrites[writeToken] !== undefined) {\n          pendingWrites[writeToken]()\n        }\n      }\n      dataStore = [...indents]\n      notifyNewData()\n    })\n    socket.on(\"sendNotifications\", (notifications) => {\n      notificationsStore = [...notifications]\n      notifyNewN()\n    })\n    socket.emit(\"requestIndents\", \"\")\n    socket.emit(\"requestNotifications\", \"\")\n    return () => {\n      socket.disconnect()\n    }\n  }, [])\n  const [selTab, setSelTab] = React.useState(0);\n\n  return (\n    <Tabs selTab={selTab} setSelTab={setSelTab}>\n      {[(<div label=\"view indents\" key=\"defaultTab1\" mykey=\"defaultTab1\">\n        <TransportView setSelTab={setSelTab}/>\n      </div>),\n      (<div label=\"new indent\" key=\"defaultTab2\" mykey=\"defaultTab2\">\n        <NewIndentView/>\n      </div>),\n      (<div label=\"notifications\" key=\"defaultTab3\" mykey=\"defaultTab3\">\n        <NotificationsPanel setSelTab={setSelTab}/>\n      </div>), ...tabs.map((v, i) => (<DetailGenerator mykey={v[0]} label={readDataStore(v[1]).name} removable=\"true\" removeCallback={(index, length) => {\n        removeTab(v[0])\n        const currSelTab = Math.min(selTab, length-1)\n        if (currSelTab > index) {\n          setSelTab(currSelTab-1)\n        }\n      }} details={v} key={v[0]} />))]}\n    </Tabs>\n  );\n}\n\nconst DevPanel = () => {\n  const [myServerURL, setServerURL] = React.useState(serverURL)\n  const [response, setResponse] = React.useState(\"\");\n  const myListener = data => {\n    setResponse(data)\n  }\n\n  React.useEffect(() => {\n    socket.on(\"FromAPI\", myListener);\n    return () => {\n      socket.off(\"FromAPI\", myListener)\n    }\n  }, []);\n\n  return (<div>\n    <div>Server URL</div><textarea value={myServerURL} onChange={(event) => {\n      serverURL = event.target.value\n      setServerURL(serverURL)\n    }}/>\n    <div>It's {response}</div>\n  </div>)\n}\n\nconst NotificationsPanel = ({setSelTab}) => {\n  var myData = readNotifications()\n  const [data, setData] = React.useState(myData)\n  React.useEffect(() => {\n    const callbackID = registerNotify(setData)\n    return () => deregisterNotify(callbackID)\n  }, [])\n  var newData = []\n  const encountered = {}\n  for (var i = myData.length-1; i > -1; i--) {\n    if (encountered[myData[i].internalUID] === true) {\n      newData.push({...myData[i], latest: false})\n    }\n    else {\n      newData.push({...myData[i], latest: true})\n    }\n    encountered[myData[i].internalUID] = true\n  }\n  return (<ListFactory data={newData} generator={(x, index) => notificationItemGenerator(x, x.internalUID, \"\"+x.internalUID+index, setSelTab)} style={TransportViewStyle}/>)\n}\n\nconst detailPersistentStore = {}\n\nconst DetailGenerator = ({details}) => {\n  const [id, index] = details\n  if (detailPersistentStore[id] === undefined) {\n    detailPersistentStore[id] = readDataStore(index)\n  }\n  const [data, setData] = React.useState(detailPersistentStore[id])\n  return (\n  <div>\n  <ListFactory header={(<Material.TableHead><Material.TableRow>{formFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={[data]} generator={x => detailItemGenerator(x, x.internalUID)} style={TransportViewStyle}/>\n  <Material.Select variant=\"outlined\" native value={data.status} onChange={(event) => {\n    detailPersistentStore[id] = {...detailPersistentStore[id], status: event.target.value}\n    setData(detailPersistentStore[id])\n  }}>\n  {statuses.map((val, index) => (<option key={index} value={val}>{val}</option>))}\n  </Material.Select>\n  <Material.Button variant=\"outlined\" onClick={() => {editData(index, detailPersistentStore[id])}}>Save</Material.Button>\n  </div>\n  )\n}\n\nconst editData = async (index, newData) => {\n  const refresh = await writeDataStore(index, newData)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst readDataStore = (internalUID) => {\n  const result = dataStore.filter(x => x.internalUID === internalUID)\n  if (result.length === 0) {\n    return undefined\n  }\n  else {\n    return result[0]\n  }\n}\n\nvar ackWriteToken = 0\nvar currWriteToken = 0\nvar pendingWrites = []\n\n\nconst writeDataStore = async (internalUID, write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"writeDataStore\", [internalUID, write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst appendDataStore = async (write) => {\n  currWriteToken++\n  var resolve\n  const myPromise = new Promise(v => resolve=v)\n  pendingWrites[currWriteToken] = resolve\n  socket.emit(\"appendDataStore\", [write, currWriteToken])\n  await myPromise\n  if (currWriteToken === ackWriteToken) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\nconst readRange = () => {\n  return dataStore\n}\n\nconst submitForm = async (data) => {\n  const refresh = await appendDataStore(data)\n  if (refresh) {\n    notifyNewData()\n  }\n}\n\nconst FormFactory = ({fields, defaults}) => {\n  var fieldStates = []\n  const [states, setStates] = React.useState(fields.map(x => x.initialData))\n  var myStates = states\n  for (var index = 0; index < fields.length; index++) {\n    const i = index\n    const field = fields[i]\n    fieldStates.push([states[i], x => {\n      myStates = [...myStates]\n      myStates[i] = x\n      setStates(myStates)\n    },field.initialData, field.name, field.friendlyName])\n  }\n  const initializeFields = () => {\n    setStates(fields.map(x => x.initialData))\n  }\n  const submit = () => {\n    var constitutedObject = {}\n    for (const {name, initialData} of defaults) {\n      constitutedObject[name] = initialData\n    }\n    for (const [text, setText, initialData, fieldName] of fieldStates) {\n      constitutedObject[fieldName] = text\n    }\n    submitForm(constitutedObject)\n    initializeFields()\n  }\n  return (\n  <form noValidate>\n  <div>\n  {fieldStates.map(([text, setText, initialData, fieldName, friendlyName], index) => {\n    return (\n      <div style={formItemStyle} key={index}>\n      <Material.TextField multiline label={friendlyName} variant=\"outlined\" value={text} onChange={(event) => setText(event.target.value)}/>\n      </div>\n    )\n  })}\n  </div>\n  <Material.Button variant=\"outlined\" onClick={submit}>submit</Material.Button>\n  </form>\n  )\n}\n\nconst formItemStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"5px\"\n}\n\nconst NewIndentView = () => {\n  return (<div style={TransportViewStyle}><FormFactory fields={formFields} defaults={dataDefaults}/></div>)\n}\n\nconst TransportView = ({setSelTab}) => {\n  const [data, setData] = React.useState(readRange())\n  React.useEffect(() => {\n    const callbackID = registerCallback(setData)\n    return () => deregisterCallback(callbackID)\n  }, [])\n  return (<ListFactory header={(<Material.TableHead><Material.TableRow>{displayFields.map((x, index) => (<Material.TableCell key={index}>{x.friendlyName}</Material.TableCell>))}</Material.TableRow></Material.TableHead>)} data={data} generator={x => transportItemGenerator(x, x.internalUID, setSelTab)} style={TransportViewStyle}/>)\n}\n\nconst TransportViewStyle = {\n  font: \"20px Arial, sans-serif\"\n}\n\nconst transportItemGenerator = (data, index, setSelTab) => {\n  return (\n    <Material.TableRow key={data.internalUID} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n      <Material.TableCell>{data.status}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst detailItemGenerator = (data, index) => {\n  return (\n    <Material.TableRow key={data.internalUID}>\n      <Material.TableCell>{data.name}</Material.TableCell>\n      <Material.TableCell>{data.startDateTime}</Material.TableCell>\n      <Material.TableCell>{data.endDateTime}</Material.TableCell>\n      <Material.TableCell>{data.origin}</Material.TableCell>\n      <Material.TableCell>{data.destination}</Material.TableCell>\n      <Material.TableCell>{data.POC}</Material.TableCell>\n      <Material.TableCell>{data.POCPhone}</Material.TableCell>\n    </Material.TableRow>\n  )\n}\n\nconst notificationItemGenerator = (data, index, key, setSelTab) => {\n  return (\n    <Material.TableRow key={key} onClick={() => {\n      addDetailTab(data, index)\n      setSelTab(Infinity)\n    }}><Material.TableCell style={notificationItemStyle(data.latest)} align=\"center\">{data.title}</Material.TableCell></Material.TableRow>\n  )\n}\n\nconst notificationItemStyle = (latest) => {\n  if (latest === false) {\n    return {\n      color: \"grey\"\n    }\n  }\n  else {\n    return {}\n  }\n}\n\nconst addDetailTab = (data, index) => {\n  addTab([tabID, index])\n  tabID++\n}\n\nconst ListFactory = ({data, generator, style, header, tail}) => {\n  return (\n    <Material.TableContainer>\n      <Material.Table>\n        {header}\n        <Material.TableBody>\n          {data.map(generator)}\n        </Material.TableBody>\n        {tail}\n      </Material.Table>\n    </Material.TableContainer>\n  )\n}\n\nconst getCallbackSystem = (dataSource) => {\n\n  const registeredCallbacks = []\n\n  const registerCallback = (callback) => {\n    return registeredCallbacks.push(callback)-1\n  }\n\n  const deregisterCallback = (id) => {\n    if (id > -1 && id < registeredCallbacks.length) {\n      registeredCallbacks[id] = ()=>{}\n    }\n  }\n  \n  const notifyNewData = () => {\n    for (const callback of registeredCallbacks) {\n      callback(dataSource())\n    }\n  }\n\n  return [registerCallback, deregisterCallback, notifyNewData]\n}\n\nvar dataStore = []\n\nconst readNotifications = () => {\n  return notificationsStore\n}\n\nvar notificationsStore = []\n\nconst statuses = [\"Pending\", \"Submitted\", \"Recommended\"]\n\nconst formFields = [{name: \"name\", initialData: \"\", friendlyName: \"Purpose\"}, {name: \"startDateTime\", initialData: \"\", friendlyName: \"Start time\"}, {name: \"endDateTime\", initialData: \"\", friendlyName: \"End time\"}, {name: \"origin\", initialData: \"\", friendlyName: \"Reporting location\"}, {name: \"destination\", initialData: \"\", friendlyName: \"Destination\"}, {name: \"POC\", initialData: \"\", friendlyName: \"Contact person\"}, {name: \"POCPhone\", initialData: \"\", friendlyName: \"Contact person number\"}]\n\nconst dataDefaults = [{name: \"status\", initialData: \"Pending\", friendlyName: \"Status\"}]\n\nconst displayFields = [...formFields, ...dataDefaults]\n\nconst Tabs = ({children, selTab, setSelTab}) => {\n  return (\n    <div>\n      <Material.AppBar position=\"static\">\n        <Material.Tabs centered value={Math.min(selTab, children.length-1)}>\n          {children.map((child, index) => {\n            const obj = {...child.props, removeCallback: () => child.props.removeCallback(index, children.length), onClick: () => {setSelTab(index)}, active: index === Math.min(selTab, children.length-1), key: child.props.mykey}\n            return (<Tab {...obj}></Tab>)\n          })}\n        </Material.Tabs>\n      </Material.AppBar>\n      <div>\n        {children[Math.min(selTab, children.length-1)]}\n      </div>\n    </div>\n  )\n}\n\nconst Tab = ({label, onClick, active, removable, removeCallback}) => {\n  return (\n    <Material.Tab style={{padding: 0}} disableRipple selected label={(<span><Material.Tab label={label} onClick={onClick} selected={active ? true : null}/>\n      {removable ? (<Material.IconButton size=\"small\" onClick={removeCallback}><Icons.Close style={{fill: \"red\"}}/></Material.IconButton>) : undefined}\n      </span>)}/>\n  )\n}\n\nconst TabCloseStyle = {\n  font: \"16px Arial, sans-serif\",\n  margin: \"auto\"\n}\n\nconst [registerCallback, deregisterCallback, notifyNewData] = getCallbackSystem(readRange)\n\nconst [registerNotify, deregisterNotify, notifyNewN] = getCallbackSystem(readNotifications)\n\nReactDOM.render(\n  <div style={{textAlign: \"center\"}}>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}